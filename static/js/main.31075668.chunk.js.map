{"version":3,"sources":["components/Nav/Nav.tsx","components/Header/Header.tsx","components/HomePage/HomePage.tsx","dal/api.ts","bll/employees-reducer.ts","components/Employees/Employee/Employee.tsx","components/AddItemForm/AddItemForm.tsx","components/Employees/Employees.tsx","components/Routes/Routes.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","components/Nav/Nav.module.css","components/Employees/Employee/Employee.module.css","components/Employees/Employees.module.css","components/Header/Header.module.css"],"names":["Nav","className","s","navBlock","to","activeClassName","active","Header","headerContainer","HomePage","instance","axios","create","baseURL","employeesAPI","get","then","response","data","initialState","Employee","props","employeeContainer","employeeBlock","employee","first_name","IconButton","aria-label","onClick","id","removeEmployee","Delete","AddItemForm","dispatch","useDispatch","useState","value","setValue","error","setError","TextField","label","variant","onChange","e","currentTarget","helperText","onBlur","color","trim","type","name","disabled","AddBox","Employees","employees","useSelector","state","useEffect","res","removeEmployeeAC","employeesContainer","Paper","paper","elevation","map","PATH","Routes","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","newEmployee","Date","getTime","last_name","avatar","email","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"kNAIaA,EAAgB,WACzB,OACI,sBAAKC,UAAWC,IAAEC,SAAlB,UACI,8BACI,cAAC,IAAD,CAASC,GAAG,aAAaC,gBAAiBH,IAAEI,OAA5C,oBAEJ,8BACI,cAAC,IAAD,CAASF,GAAG,aAAaC,gBAAiBH,IAAEI,OAA5C,6BCPHC,EAAmB,WAC5B,OACI,qBAAKN,UAAWC,IAAEM,gBAAlB,SACG,cAAC,EAAD,O,QCLEC,EAAqB,WAC9B,OACI,8BACI,8C,gCCHNC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,2BAGAC,EAAe,WAEpB,OAAOJ,EAASK,IAAT,qBACFC,MAAK,SAAAC,GACF,OAAOA,EAASC,SCuB5BC,EAAe,G,mCCtBNC,EAAwC,SAACC,GAQlD,OACI,qBAAKpB,UAAWC,IAAEoB,kBAAlB,SACI,sBAAKrB,UAAWC,IAAEqB,cAAlB,UACI,+BAAOF,EAAMG,SAASC,aACtB,cAACC,EAAA,EAAD,CAAYC,aAAW,SAASC,QAAS,WAV9B,IAACC,KAUkDR,EAAMG,SAASK,KARjFR,EAAMS,eAAeD,IAQjB,SACI,cAACE,EAAA,EAAD,Y,0BChBPC,EAAwB,WAEjC,IAAMC,EAAWC,cAFsB,EAIbC,mBAAiB,IAJJ,mBAIhCC,EAJgC,KAIzBC,EAJyB,OAKbF,mBAAwB,IALX,mBAKhCG,EALgC,KAKzBC,EALyB,KAuBvC,OACI,gCACI,cAACC,EAAA,EAAD,CAAWC,MAAM,OACNC,QAAQ,WACRN,MAAOA,EACPO,SArBU,SAACC,GAC1BP,EAASO,EAAEC,cAAcT,OACzBG,EAAS,OAoBMO,WAAYR,EAAQ,iBAAmB,GACvCA,QAASA,EACTS,OAAQ,WACJR,EAAS,SAGxB,cAACb,EAAA,EAAD,CAAYsB,MAAM,UAAUpB,QAvBb,WACEQ,EAAMa,OAEvBhB,EFgDP,CAACiB,KAAM,iCAAkCC,KEhDXf,IAEvBG,EAAS,mBAEbF,EAAS,KAgBgDe,WAAYd,EAAjE,SACI,cAACe,EAAA,EAAD,U,0BClCHC,EAAsB,WAE/B,IAAMC,EAAYC,aAAmD,SAAAC,GAAK,OAAIA,EAAMF,UAAUrC,QACxFe,EAAWC,cAEjBwB,qBAAU,WACNzB,GH0DG,SAACA,GACJ,OAAOnB,IACFE,MAAK,SAAA2C,GACF1B,EAZX,CAACiB,KAAM,kCAAmCK,UAYPI,EAAIzC,eG5DrC,IAEH,IAAMY,EAAiB,SAACD,GAChBA,GACAI,EH8CoB,SAACJ,GAAD,MAC3B,CAACqB,KAAM,oCAAqCrB,MG/C5B+B,CAAiB/B,KAIlC,OACI,sBAAK5B,UAAWC,IAAE2D,mBAAlB,UACI,cAACC,EAAA,EAAD,CAAO7D,UAAWC,IAAE6D,MAAOC,UAAW,EAAtC,SACI,cAAC,EAAD,MAEJ,2CAEIT,GAAaA,EAAUU,KAAI,SAAArB,GACvB,OACI,cAAC,EAAD,CAAqBpB,SAAUoB,EAAGd,eAAgBA,GAAnCc,EAAEf,WC5B5BqC,EACE,aADFA,EAEE,aAcAC,EAXU,WACrB,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAMF,EAAgBG,OAAQ,kBAAM,cAAC,EAAD,OAC3C,cAAC,IAAD,CAAOD,KAAMF,EAAgBG,OAAQ,kBAAM,cAAC,EAAD,aCX9CC,EAAgB,WACzB,OACI,sBAAKrE,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCKGsE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCLRO,EAAcC,YAAgB,CAChCzB,UP8B4B,WAA8E,IAA7EE,EAA4E,uDAArDtC,EAAc8D,EAAuC,uCACzG,OAAQA,EAAO/B,MACX,IAAK,kCACD,OAAO,2BACAO,GADP,IAEIvC,KAAM+D,EAAO1B,YAErB,IAAK,oCACD,OAAO,2BACAE,GADP,IAEIvC,KAAMuC,EAAMvC,KAAKgE,QAAO,SAAAtC,GAAC,OAAIA,EAAEf,KAAOoD,EAAOpD,QAErD,IAAK,iCACD,IAAIsD,EAA4B,CAC5BtD,IAAI,IAAIuD,MAAOC,UACf5D,WAAYwD,EAAO9B,KACnBmC,UAAW,cACXC,OAAQ,SACRC,MAAO,yBAEX,OAAO,2BACA/B,GADP,IAEIvC,KAAK,CAAEiE,GAAH,mBAAmB1B,EAAMvC,SAErC,QACI,OAAOuC,MOpDNgC,EAAQC,YAAYX,EAAaY,YAAgBC,MCC9DC,IAASxB,OACL,cAAC,IAAMyB,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,EAAD,UAIZM,SAASC,eAAe,SAM5BzB,K,mBCtBA0B,EAAOC,QAAU,CAAC,SAAW,sBAAsB,OAAS,sB,mBCA5DD,EAAOC,QAAU,CAAC,kBAAoB,oCAAoC,cAAgB,kC,mBCA1FD,EAAOC,QAAU,CAAC,mBAAqB,sCAAsC,MAAQ,2B,mBCArFD,EAAOC,QAAU,CAAC,gBAAkB,kC","file":"static/js/main.31075668.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Nav.module.css\"\r\n\r\nexport const Nav: React.FC = () => {\r\n    return (\r\n        <div className={s.navBlock}>\r\n            <div>\r\n                <NavLink to=\"/home_page\" activeClassName={s.active}>Main</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/employees\" activeClassName={s.active}>Employees</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {Nav} from \"../Nav/Nav\";\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <div className={s.headerContainer}>\r\n           <Nav/>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport const HomePage: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    );\r\n}","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://reqres.in/api/',\r\n})\r\n\r\nexport const employeesAPI = {\r\n    getEmployees() {\r\n        return instance.get(`users?per_page=12`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","import {employeesAPI} from \"../dal/api\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof getEmployeesAC>\r\n    | ReturnType<typeof removeEmployeeAC>\r\n    | ReturnType<typeof addEmployeeAC>\r\n\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\n\r\nexport type EmployeeType = {\r\n    id: number,\r\n    email: string,\r\n    first_name: string\r\n    last_name: string\r\n    avatar: string\r\n}\r\n\r\ntype SupportType = {\r\n    url: string\r\n    text: string\r\n}\r\n\r\nexport type EmployeesType = {\r\n    page: number\r\n    per_page: number\r\n    total: number\r\n    total_pages: number\r\n    data: Array<EmployeeType>\r\n    support: SupportType\r\n}\r\n\r\nlet initialState = {} as EmployeesType\r\n\r\nexport const employeesReducer = (state: EmployeesType = initialState, action: ActionsType): EmployeesType => {\r\n    switch (action.type) {\r\n        case \"EMPLOYEES-REDUCER/GET-EMPLOYEES\":\r\n            return {\r\n                ...state,\r\n                data: action.employees\r\n            }\r\n        case \"EMPLOYEES-REDUCER/REMOVE-EMPLOYEE\":\r\n            return {\r\n                ...state,\r\n                data: state.data.filter(e => e.id !== action.id)\r\n            }\r\n        case \"EMPLOYEES-REDUCER/ADD-EMPLOYEE\":\r\n            let newEmployee: EmployeeType = {\r\n                id: new Date().getTime(),\r\n                first_name: action.name,\r\n                last_name: \"NewEmployee\",\r\n                avatar: \"avatar\",\r\n                email: \"newEmployee@gmail.com\"\r\n            }\r\n            return {\r\n                ...state,\r\n                data: [newEmployee, ...state.data]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst getEmployeesAC = (employees: Array<EmployeeType>) =>\r\n    ({type: \"EMPLOYEES-REDUCER/GET-EMPLOYEES\", employees} as const)\r\n\r\nexport const removeEmployeeAC = (id: number) =>\r\n    ({type: \"EMPLOYEES-REDUCER/REMOVE-EMPLOYEE\", id} as const)\r\n\r\nexport const addEmployeeAC = (name: string) =>\r\n    ({type: \"EMPLOYEES-REDUCER/ADD-EMPLOYEE\", name} as const)\r\n\r\nexport const getEmployeesTC = (): ThunkType => {\r\n    return (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        return employeesAPI.getEmployees()\r\n            .then(res => {\r\n                dispatch(getEmployeesAC(res.data))\r\n            })\r\n    }\r\n}","import {IconButton} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {EmployeeType} from \"../../../bll/employees-reducer\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport s from \"./Employee.module.css\";\r\n\r\ntype EmployeePropsType = {\r\n    employee: EmployeeType\r\n    removeEmployee: (id: number) => void\r\n}\r\n\r\nexport const Employee: React.FC<EmployeePropsType> = (props) => {\r\n\r\n    const removeEmployee = (id: number) => {\r\n        if (id) {\r\n            props.removeEmployee(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.employeeContainer}>\r\n            <div className={s.employeeBlock}>\r\n                <span>{props.employee.first_name}</span>\r\n                <IconButton aria-label=\"delete\" onClick={() => removeEmployee(props.employee.id)}>\r\n                    <Delete/>\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {addEmployeeAC} from \"../../bll/employees-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\n\r\n\r\n\r\nexport const AddItemForm: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [value, setValue] = useState<string>(\"\")\r\n    const [error, setError] = useState<string | null>(\"\")\r\n\r\n    const onChangeValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n        setError(null)\r\n    }\r\n\r\n    const addItemHandler = () => {\r\n        const trimmedValue = value.trim()\r\n        if (trimmedValue) {\r\n            dispatch(addEmployeeAC(value));\r\n        } else {\r\n            setError(\"Field is empty!\")\r\n        }\r\n        setValue(\"\")\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <TextField label=\"Name\"\r\n                       variant=\"outlined\"\r\n                       value={value}\r\n                       onChange={onChangeValueHandler}\r\n                       helperText={error ? \"Field is empty\" : \"\"}\r\n                       error={!!error}\r\n                       onBlur={() => {\r\n                           setError(null)\r\n                       }}\r\n            />\r\n            <IconButton color=\"primary\" onClick={addItemHandler} disabled={!!error}>\r\n                <AddBox/>\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {EmployeeType, getEmployeesTC, removeEmployeeAC} from \"../../bll/employees-reducer\";\r\nimport {AppRootStateType} from \"../../bll/store\";\r\nimport {Employee} from \"./Employee/Employee\";\r\nimport {AddItemForm} from \"../AddItemForm/AddItemForm\";\r\nimport {Paper} from \"@material-ui/core\";\r\nimport s from \"./Employees.module.css\"\r\n\r\n\r\nexport const Employees: React.FC = () => {\r\n\r\n    const employees = useSelector<AppRootStateType, Array<EmployeeType>>(state => state.employees.data)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getEmployeesTC())\r\n    }, [])\r\n\r\n    const removeEmployee = (id: number) => {\r\n        if (id) {\r\n            dispatch(removeEmployeeAC(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.employeesContainer}>\r\n            <Paper className={s.paper} elevation={3}>\r\n                <AddItemForm/>\r\n            </Paper>\r\n            <h3>EMPLOYEES</h3>\r\n            {\r\n                employees && employees.map(e => {\r\n                    return (\r\n                        <Employee key={e.id} employee={e} removeEmployee={removeEmployee}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {HomePage} from \"../HomePage/HomePage\";\r\nimport {Employees} from \"../Employees/Employees\";\r\n\r\n\r\nexport const PATH = {\r\n    HOME_PAGE: \"/home_page\",\r\n    EMPLOYEES: \"/employees\"\r\n}\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={PATH.HOME_PAGE} render={() => <HomePage/>}/>\r\n                <Route path={PATH.EMPLOYEES} render={() => <Employees/>}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport Routes from \"./components/Routes/Routes\";\n\nexport const App: React.FC = () => {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Routes/>\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {employeesReducer} from \"./employees-reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n    employees: employeesReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from './bll/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter >\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBlock\":\"Nav_navBlock__1fEAW\",\"active\":\"Nav_active__1n08S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeeContainer\":\"Employee_employeeContainer__2O6-o\",\"employeeBlock\":\"Employee_employeeBlock__3YLSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesContainer\":\"Employees_employeesContainer__3_cS6\",\"paper\":\"Employees_paper__26arO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__3z4YT\"};"],"sourceRoot":""}